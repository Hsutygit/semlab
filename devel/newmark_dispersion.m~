% Dispersion analysis for the explicit (predictor-corrector) versions
% of the Newmark and HHT-alpha time-schemes

alpha = 1; beta = 1; gamma = 1; % Raul
alpha=1; beta=0; gamma=1/2; % centered difference

% With the notation d = displacement, v = velocity*dt, a = acceleration*dt^2
% and w = omega*dt :

w=logspace(-2,log10(2),100);
w=linspace(0.01,3,100);

% Predictor:
%   dp = d[n] + v[n] + (1/2-beta)*a[n]
%   vp = v[n] + (1-gamma)*a[n]
%
% xp = PRED*x[n]  where x = (d,v,a)
PRED = [[1 1 1/2-beta];...
        [0 1 1-gamma] ; ...
	[0 0 0]];

% Solver:
%   a[n+1] = - w^2*( alpha*dp +(1-alpha)*d[n] )
% Corrector:
%   d[n+1] = dp + beta*a[n+1]
%   v[n+1] = vp + gamma*a[n+1]
%
% LHS*x[n+1] = ARP*xp + ARN*x[n]
LHS = [[1 0 -beta] ; ...
       [0 1 -gamma]; ...
       [0 0 1]];
for k=1:length(w),
  ARP = [[1 0 0] ; ...
         [0 1 0]; ...
         [-alpha*w(k)^2 0 0]];
  ARN = [[0 0 0] ; ...
         [0 0 0]; ...
         [-(1-alpha)*w(k)^2 0 0]];
  % rhs matrix in LHS*x[n+1] = RHS*x[n]
  RHS = ARP*PRED + ARN;
  lambda = eig(RHS,LHS);
  rho(k) = max(abs(lambda));
  cxroots = lambda(imag(lambda)~=0);
  if ~isempty(cxroots)
    phi(k) = max(angle(cxroots));
  else
    phi(k) =0;
  end
end

subplot(221)
plot(w,rho)
ylabel('Amplification \rho')
subplot(223)
plot(w,phi./w)
ylabel('Phase velocity c')
xlabel('\omega \Delta t')

subplot(222)
loglog(w,abs(1-rho))
ylabel('|1-\rho|')
subplot(224)
loglog(w,abs(1-phi./w))
ylabel('')
xlabel('\omega \Delta t')
